.. _kubernetes-dns:

====================
Kubernetes DNS 搭建
====================


.. note::

   1. 以下所以shell命令都是在root用户下执行
   2. Kubernetes集群环境已搭建好，请参考 :ref:`kubernetes-cluster-environment`

.. end

Prerequisites
~~~~~~~~~~~~~

+-------------------------------------------------------+-----------------------+
| docker镜像                                            | version               |
+-------------------------------------------------------+-----------------------+
| gcr.io/google_containers/k8s-dns-kube-dns-amd64       | ``1.14.4``            |
+-------------------------------------------------------+-----------------------+
| gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64  | ``1.14.4``            |
+-------------------------------------------------------+-----------------------+
| gcr.io/google_containers/k8s-dns-sidecar-amd64        | ``1.14.4``            |
+-------------------------------------------------------+-----------------------+
| radial/busyboxplus                                    | ``curl``              |
+-------------------------------------------------------+-----------------------+


Deploy
~~~~~~

#. 准备kubedns-controller.yaml:

   .. code-block:: yaml
      :linenos:
      :emphasize-lines: 82

      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: kube-dns
        namespace: kube-system
        labels:
          k8s-app: kube-dns
          kubernetes.io/cluster-service: "true"
          addonmanager.kubernetes.io/mode: Reconcile
      spec:
        # replicas: not specified here:
        # 1. In order to make Addon Manager do not reconcile this replicas parameter.
        # 2. Default is 1.
        # 3. Will be tuned in real time if DNS horizontal auto-scaling is turned on.
        strategy:
          rollingUpdate:
            maxSurge: 10%
            maxUnavailable: 0
        selector:
          matchLabels:
            k8s-app: kube-dns
        template:
          metadata:
            labels:
              k8s-app: kube-dns
            annotations:
              scheduler.alpha.kubernetes.io/critical-pod: ''
          spec:
            containers:
            - name: kubedns
              image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.4
              resources:
                # TODO: Set memory limits when we've profiled the container for large
                # clusters, then set request = limit to keep this container in
                # guaranteed class. Currently, this container falls into the
                # "burstable" category so the kubelet doesn't backoff from restarting it.
                limits:
                  memory: 170Mi
                requests:
                  cpu: 100m
                  memory: 70Mi
              livenessProbe:
                httpGet:
                  path: /healthcheck/kubedns
                  port: 10054
                  scheme: HTTP
                initialDelaySeconds: 60
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 5
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: 8081
                  scheme: HTTP
                # we poll on pod startup for the Kubernetes master service and
                # only setup the /readiness HTTP server once that's available.
                initialDelaySeconds: 3
                timeoutSeconds: 5
              args:
              - --domain=cluster.local.
              - --dns-port=10053
              - --kube-master-url=http://10.20.0.100:8080
              - --v=2
              env:
              - name: PROMETHEUS_PORT
                value: "10055"
              ports:
              - containerPort: 10053
                name: dns-local
                protocol: UDP
              - containerPort: 10053
                name: dns-tcp-local
                protocol: TCP
              - containerPort: 10055
                name: metrics
                protocol: TCP
            - name: dnsmasq
              image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.4
              livenessProbe:
                httpGet:
                  path: /healthcheck/dnsmasq
                  port: 10054
                  scheme: HTTP
                initialDelaySeconds: 60
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 5
              args:
              - -v=2
              - -logtostderr
              - -restartDnsmasq=true
              - --
              - -k
              - --cache-size=1000
              - --log-facility=-
              - --server=/cluster.local/127.0.0.1#10053
              - --server=/in-addr.arpa/127.0.0.1#10053
              - --server=/ip6.arpa/127.0.0.1#10053
              ports:
              - containerPort: 53
                name: dns
                protocol: UDP
              - containerPort: 53
                name: dns-tcp
                protocol: TCP
              # see: https://github.com/kubernetes/kubernetes/issues/29055 for details
              resources:
                requests:
                  cpu: 150m
                  memory: 20Mi
            - name: sidecar
              image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.4
              livenessProbe:
                httpGet:
                  path: /metrics
                  port: 10054
                  scheme: HTTP
                initialDelaySeconds: 60
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 5
              args:
              - --v=2
              - --logtostderr
              - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,A
              - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,A
              ports:
              - containerPort: 10054
                name: metrics
                protocol: TCP
              resources:
                requests:
                  memory: 20Mi
                  cpu: 10m
            dnsPolicy: Default  # Don't use cluster DNS.


   .. end

   .. warning::

      You need to replace ``- --kube-master-url=http://master:8080`` at line 82

      .. note::

         ``master`` is the host ip of master node

         ``8080`` is the port which kube-apiserver is listening to

      .. end

   .. end


#. 准备kubedns-svc.yaml

   .. code-block:: yaml
      :linenos:
      :emphasize-lines: 30


      apiVersion: v1
      kind: Service
      metadata:
        name: kube-dns
        namespace: kube-system
        labels:
          k8s-app: kube-dns
          kubernetes.io/cluster-service: "true"
          addonmanager.kubernetes.io/mode: Reconcile
          kubernetes.io/name: "KubeDNS"
      spec:
        selector:
          k8s-app: kube-dns
        clusterIP: 10.254.1.1
        ports:
        - name: dns
          port: 53
          protocol: UDP
        - name: dns-tcp
          port: 53
          protocol: TCP

   .. end

   可自定义修改kubedns-svc.yaml中30行的clusterIP为/etc/kubernetes/apiserver中定义的
   KUBE_SERVICE_ADDRESSES="--service-cluster-ip-range=10.254.0.0/16"的网络中的一个。

#. create pod from kubedns-controller.yaml and kubedns-svc.yaml

   .. code-block:: console

      [root@master ~]# kubectl create -f kubedns-controller.yaml
      [root@master ~]# kubectl create -f kubedns-svc.yaml

   .. end


Verify
~~~~~~

#. create pod from busybox.yaml:

   .. code-block:: yaml

      apiVersion: v1
      kind: Pod
      metadata:
        name: busybox
        namespace: default
      spec:
        containers:
        - name: busybox
          image: radial/busyboxplus:curl
          command:
            - sleep
            - "3600"
          imagePullPolicy: IfNotPresent

   .. end

   .. code-block:: console

      [root@master ~]# kubectl create -f busybox.yaml

   .. end

#. 在容器成功启动后，通过kubectl exec <container_id> nslookup 进行测试：

   .. code-block:: console

      [root@master ~]# kubectl exec busybox -- nslookup kubernetes-dashboard.kube-system
      Server:    10.254.1.1
      Address 1: 10.254.1.1 kube-dns.kube-system.svc.cluster.local

      Name:      kubernetes-dashboard.kube-system
      Address 1: 10.254.193.179 kubernetes-dashboard.kube-system.svc.cluster.local

   .. end

   出现以上的DNS信息则表面kubernetes dns服务成功部署。
